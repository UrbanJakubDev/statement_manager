import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import axios from "axios";
import { useState, useEffect, ChangeEvent } from "react";

const Home: NextPage = () => {
  // File state
  const [data, setData] = useState<Object>();
  const [file, setFile] = useState<File | null>(null);
  const [uploadResponse, setUploadResponse] = useState<Object | null>();

  // On file select (from the pop up) set the file state
  const onFileChange = (event: ChangeEvent<HTMLInputElement>) => {
    if (event.target.files) {
      console.log(event.target.files[0]);
      setFile(event.target.files[0]);
    }

    // Clear the input
    // event.target.value = "";
  };

  // Function to clear the input file after successful upload
  const clearInput = () => {
    const input = document.getElementById("uploadFile");
    if (input) {
      input.value = "";
    }
  };

  // On file upload (click the upload button) not reload the page and send the file
  const onFileUpload = (event: { preventDefault: () => void }) => {
    event.preventDefault();
    if (file) {
      const formData = new FormData();
      formData.append("file", file);
      axios
        .post("http://localhost:4200/example/upload/", formData)
        .then((res) => {
          setUploadResponse(res.data);
        })
        .catch((err) => {
          console.log(err);
        });
    }

    // Clear the input
    clearInput();

  };

  // Get all files
  const getAPIResponse = async () => {
    const res = await axios
      .get("http://localhost:4200/example/example/")
      .then((res) => {
        setData(res.data);
      });
  };

  // On mount get files
  useEffect(() => {
    getAPIResponse();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>File uploader</h1>
        <form onSubmit={onFileUpload}>
          <input id="uploadFile" type="file" onChange={onFileChange} />
          {file? <button type="submit">Upload!</button> : null}
          {
            // Redner the file upload response from the server if it exists
            uploadResponse ? (
              <div>
                <p>{uploadResponse.message}</p>
              </div>
            ) : null
          }
        </form>

        <h1>Files</h1>
        <div></div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
